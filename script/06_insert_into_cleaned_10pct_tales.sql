SET hive.exec.dynamic.partition=true;  
SET hive.exec.dynamic.partition.mode=nonstrict; 

set mapreduce.map.memory.mb=4000;
set mapreduce.map.java.opts=-Xmx3000m;
set mapreduce.reduce.memory.mb=4000;
set mapreduce.reduce.java.opts=-Xmx3000m;

-- 1- ACTIF_DATA_ET_DATE_ACTIVATION

Drop table if exists oic.TT_ACTIF_DATA_ET_DATE_ACTIVATION_APRES;
Drop table if exists OIC.TT_ACTIF_DATA_ET_DATE_ACTIVATION_AVANT;
Drop table if exists OIC.TT_ACTIF_DATA_ET_DATE_ACTIVATION_AVANT2;

Create table oic.TT_ACTIF_DATA_ET_DATE_ACTIVATION_APRES As 
select * FROM OIC.TT_ACTIF_DATA_ET_DATE_ACTIVATION where date_activation not like upper('%AVANT%')
and upper(date_activation) not like upper('%date%');

Create table oic.TT_ACTIF_DATA_ET_DATE_ACTIVATION_AVANT As 
select * FROM OIC.TT_ACTIF_DATA_ET_DATE_ACTIVATION where date_activation like upper('%AVANT%');

Create table if not exists OIC.TT_ACTIF_DATA_ET_DATE_ACTIVATION_AVANT2
as
SELECT
  CAST(MSISDN AS BIGINT),
  case
    when date_activation = 'AVANT_MAI_2011' then '201001'
  end DATE_ACTIVATION
FROM OIC.TT_ACTIF_DATA_ET_DATE_ACTIVATION_AVANT;

SET hive.exec.dynamic.partition=true;  
SET hive.exec.dynamic.partition.mode=nonstrict; 

INSERT OVERWRITE TABLE OIC.TF_ACTIF_DATA_ET_DATE_ACTIVATION_10PCT PARTITION (PRT_DATE)
SELECT
  CAST(MSISDN AS BIGINT),
  FROM_UNIXTIME(UNIX_TIMESTAMP(DATE_ACTIVATION, 'yyyyMM')),
  DATE_ACTIVATION
from oic.TT_ACTIF_DATA_ET_DATE_ACTIVATION_APRES
WHERE SUBSTR(MSISDN, LENGTH(MSISDN), (LENGTH(MSISDN) -1 )) = '0';

INSERT INTO TABLE OIC.TF_ACTIF_DATA_ET_DATE_ACTIVATION_10PCT PARTITION (PRT_DATE)
SELECT
  CAST(MSISDN AS BIGINT),
  FROM_UNIXTIME(UNIX_TIMESTAMP(DATE_ACTIVATION, 'yyyyMM')),
  DATE_ACTIVATION
from oic.TT_ACTIF_DATA_ET_DATE_ACTIVATION_AVANT2
WHERE SUBSTR(MSISDN, LENGTH(MSISDN), (LENGTH(MSISDN) -1 )) = '0';

Drop table if exists oic.TT_ACTIF_DATA_ET_DATE_ACTIVATION_APRES;
Drop table if exists OIC.TT_ACTIF_DATA_ET_DATE_ACTIVATION_AVANT;
Drop table if exists OIC.TT_ACTIF_DATA_ET_DATE_ACTIVATION_AVANT2;


-- 2- BUNDLE

INSERT OVERWRITE TABLE OIC.TF_BUNDLE_10PCT PARTITION(PRT_DATE)
SELECT
  FROM_UNIXTIME(UNIX_TIMESTAMP(DATE_SOUSCRIPTION, 'yyyyMMdd')),
  CAST(MSISDN AS BIGINT),
  Cast(Trim(TYPE_SOUSCRIPTION) As String),
  CAST(cast(REGEXP_REPLACE(NOMBRE_SOUSCRIPTION, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(MONTANT_SOUSCRIPTION, ',', '.') as float) AS int),
  DATE_SOUSCRIPTION
FROM OIC.TT_BUNDLE WHERE TYPE_SOUSCRIPTION <> 'TYPE_SOUSCRIPTION'
AND SUBSTR(MSISDN, LENGTH(MSISDN), (LENGTH(MSISDN) -1 )) = '0';

-- 3- CDR	
-- 3-1- CDR_traffic_customer_cell

INSERT OVERWRITE TABLE OIC.TF_CDR_TRAFFIC_CUSTOMER_CELL_10PCT PARTITION (PRT_DATE)
SELECT
  FROM_UNIXTIME(UNIX_TIMESTAMP(day, 'yyyy-MM-dd')),
  CAST(idCust AS String),
  CAST(idGGSN AS int),
  CAST(idRAT AS int),
  CAST(trim(idTAC) AS String),
  CAST(idCell AS BIGINT),
  CAST(trim(roaming) AS String),
  CAST(trim(nBytesDn) AS BIGINT),
  CAST(trim(nBytesUp) AS BIGINT),
  Day
FROM OIC.TT_CDR_TRAFFIC_CUSTOMER_CELL where idCust not like upper('%idCust%')
and (Day like '201_-__-01' or Day like '201_-__-15' or Day like '201_-__-28');

-- 3-2- traffic_customer

INSERT OVERWRITE TABLE OIC.TF_CDR_TRAFFIC_CUSTOMER_10PCT PARTITION (PRT_DATE)
SELECT
  FROM_UNIXTIME(UNIX_TIMESTAMP(day, 'yyyy-MM-dd')),
  CAST(idCust AS String),
  CAST(idAppli AS BIGINT),
  CAST(idAPN AS String),
  CAST(trim(idTAC) AS String),
  CAST(idRAT AS Int),
  CAST(idGGSN AS Int),
  CAST(trim(roaming) AS String),
  CAST(nBytesDn AS BIGINT),
  CAST(nBytesUp AS BIGINT),
  CAST(nBytesT AS BIGINT),
  Cast(Trim(Terminal_type) As String),
  Cast(Trim(Terminal_brand) As String),
  Cast(Trim(Terminal_model) As String),
  Cast(Trim(Subscriber_type) As String),
  Cast(Trim(Service_type) As String),
  CAST(idContract AS String),
  Day
FROM OIC.TT_CDR_TRAFFIC_CUSTOMER where idCust not like upper('%idCust%')
and (Day like '201_-__-01' or Day like '201_-__-15' or Day like '201_-__-28');

-- 3-3- Conversions_Id; Table = OIC.TF_CONVERSIONS_ID_*;
-- Table = OIC.TF_CONVERSIONS_ID_APN;


-- 4- DONNEES_HISTO_MENSUELLES

Drop table if exists oic.TT_DONNEES_HISTO_MENSUELLES_APRES;
Drop table if exists oic.TT_DONNEES_HISTO_MENSUELLES_AVANT;
Drop table if exists oic.TT_DONNEES_HISTO_MENSUELLES_AVANT2;

Create table oic.TT_DONNEES_HISTO_MENSUELLES_APRES As 
select * FROM OIC.TT_DONNEES_HISTO_MENSUELLES where upper(date_activation) not like upper('%AVANT%') and
upper(date_activation) not like upper('%date%');

Create table oic.TT_DONNEES_HISTO_MENSUELLES_AVANT As 
select * FROM OIC.TT_DONNEES_HISTO_MENSUELLES where upper(date_activation) like upper('%AVANT%');

Create table if not exists OIC.TT_DONNEES_HISTO_MENSUELLES_AVANT2
as
SELECT
  MONTH_ID, MSISDN, GEOLOCALITE, COMMUNE, DEPARTEMENT, REGION,
  REGION_CAT, DISTRIBUTEUR,
  case
    when date_activation = 'AVANT_MAI_2011' then '201001'
  end DATE_ACTIVATION,
 STATUT_OM, STATUT_MSIM, STATUT_MOOV, STATUT_MTN,
 SEGMENT_VALEUR, PLAN_TARIFAIRE, MONTANT_RECHARGE, REV_TOT_CONSOMME, REV_SORTANT, REV_ENTRANT, REV_VOIX, REV_SMS,
 REV_DATA, REV_PASS, REV_SVA, VOL_TOT_VOIX_SORTANT, NB_TOT_VOIX_SORTANT, NB_TOT_SMS_SORTANT,
 NB_VOIX_OFFNET_SORTANT, NB_VOIX_ONNET_SORTANT, NB_VOIX_INTER, NB_VOIX_ROAM_SORTANT,
 NB_VOIX_ROAM_ENTRANT, NB_SMS_OFFNET_SORTANT, NB_SMS_INTER_SORTANT, NB_SMS_ONET_SORTANT,
 NB_SMS_ROAM_SORTANT, VOL_TOT_VOIX_OFFNET_SORTANT, VOL_TOT_VOIX_ONNET_SORTANT, VOL_TOT_VOIX_INTER_SORTANT,
 VOL_VOIX_ROAM_SORTANT, VOL_VOIX_ROAM_ENTRANT, VOL_DATA_ROAM, VOL_CONSOMME
FROM OIC.TT_DONNEES_HISTO_MENSUELLES_AVANT;

SET hive.exec.dynamic.partition=true;
SET hive.exec.dynamic.partition.mode=nonstrict;

INSERT INTO TABLE OIC.TF_DONNEES_HISTO_MENSUELLES_10PCT PARTITION (PRT_DATE)
SELECT
  FROM_UNIXTIME(UNIX_TIMESTAMP(MONTH_ID, 'yyyyMM')),
  CAST(MSISDN AS BIGINT),
  Cast(Trim(GEOLOCALITE) As String),
  Cast(Trim(COMMUNE) As String),
  Cast(Trim(DEPARTEMENT) As String),
  Cast(Trim(REGION) As String),
  Cast(Trim(REGION_CAT) As String),
  Cast(Trim(DISTRIBUTEUR) As String),
  FROM_UNIXTIME(UNIX_TIMESTAMP(DATE_ACTIVATION, 'yyyyMM')),
  CAST(STATUT_OM AS String),
  Cast(Trim(STATUT_MSIM) As String),
  Cast(Trim(STATUT_MOOV) As String),
  Cast(Trim(STATUT_MTN) As String),
  Cast(Trim(SEGMENT_VALEUR) As String),
  Cast(Trim(PLAN_TARIFAIRE) As String), 
  CAST(REGEXP_REPLACE(MONTANT_RECHARGE, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_TOT_CONSOMME, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_SORTANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_ENTRANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_VOIX, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_SMS, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_DATA, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_PASS, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_SVA, ',', '.') AS FLOAT),
  CAST(cast(REGEXP_REPLACE(VOL_TOT_VOIX_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_TOT_VOIX_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_TOT_SMS_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_VOIX_OFFNET_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_VOIX_ONNET_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_VOIX_INTER, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_VOIX_ROAM_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_VOIX_ROAM_ENTRANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_SMS_OFFNET_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_SMS_INTER_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_SMS_ONET_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_SMS_ROAM_SORTANT, ',', '.') as float) AS int),
  CAST(REGEXP_REPLACE(VOL_TOT_VOIX_OFFNET_SORTANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(VOL_TOT_VOIX_ONNET_SORTANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(VOL_TOT_VOIX_INTER_SORTANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(VOL_VOIX_ROAM_SORTANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(VOL_VOIX_ROAM_ENTRANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(VOL_DATA_ROAM, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(VOL_CONSOMME, ',', '.') AS FLOAT),
  MONTH_ID
FROM OIC.TT_DONNEES_HISTO_MENSUELLES_APRES WHERE SUBSTR(MSISDN, LENGTH(MSISDN), (LENGTH(MSISDN) -1 )) = '0';

INSERT INTO TABLE OIC.TF_DONNEES_HISTO_MENSUELLES_10PCT PARTITION (PRT_DATE)
SELECT
  FROM_UNIXTIME(UNIX_TIMESTAMP(MONTH_ID, 'yyyyMM')),
  CAST(MSISDN AS BIGINT),
  Cast(Trim(GEOLOCALITE) As String),
  Cast(Trim(COMMUNE) As String),
  Cast(Trim(DEPARTEMENT) As String),
  Cast(Trim(REGION) As String),
  Cast(Trim(REGION_CAT) As String),
  Cast(Trim(DISTRIBUTEUR) As String),
  FROM_UNIXTIME(UNIX_TIMESTAMP(DATE_ACTIVATION, 'yyyyMM')),
  CAST(STATUT_OM AS String),
  Cast(Trim(STATUT_MSIM) As String),
  Cast(Trim(STATUT_MOOV) As String),
  Cast(Trim(STATUT_MTN) As String),
  Cast(Trim(SEGMENT_VALEUR) As String),
  Cast(Trim(PLAN_TARIFAIRE) As String), 
  CAST(REGEXP_REPLACE(MONTANT_RECHARGE, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_TOT_CONSOMME, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_SORTANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_ENTRANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_VOIX, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_SMS, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_DATA, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_PASS, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(REV_SVA, ',', '.') AS FLOAT),
  CAST(cast(REGEXP_REPLACE(VOL_TOT_VOIX_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_TOT_VOIX_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_TOT_SMS_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_VOIX_OFFNET_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_VOIX_ONNET_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_VOIX_INTER, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_VOIX_ROAM_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_VOIX_ROAM_ENTRANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_SMS_OFFNET_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_SMS_INTER_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_SMS_ONET_SORTANT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NB_SMS_ROAM_SORTANT, ',', '.') as float) AS int),
  CAST(REGEXP_REPLACE(VOL_TOT_VOIX_OFFNET_SORTANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(VOL_TOT_VOIX_ONNET_SORTANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(VOL_TOT_VOIX_INTER_SORTANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(VOL_VOIX_ROAM_SORTANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(VOL_VOIX_ROAM_ENTRANT, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(VOL_DATA_ROAM, ',', '.') AS FLOAT),
  CAST(REGEXP_REPLACE(VOL_CONSOMME, ',', '.') AS FLOAT),
  MONTH_ID
FROM oic.TT_DONNEES_HISTO_MENSUELLES_AVANT2 WHERE SUBSTR(MSISDN, LENGTH(MSISDN), (LENGTH(MSISDN) -1 )) = '0';

Drop table if exists oic.TT_DONNEES_HISTO_MENSUELLES_APRES;
Drop table if exists oic.TT_DONNEES_HISTO_MENSUELLES_AVANT;
Drop table if exists oic.TT_DONNEES_HISTO_MENSUELLES_AVANT2;


-- 5- ENTRANT

INSERT OVERWRITE TABLE OIC.TF_CDR_ENTRANT_10PCT PARTITION (PRT_DATE)
SELECT
  FROM_UNIXTIME(UNIX_TIMESTAMP(DATE_ID, 'yyyyMMdd')),
  CAST(MSISDN AS String),
  CAST(Trim(MSISDN_APPELANT) AS String),
  CAST(Trim(MSISDN_APPELE) AS BIGINT),
  Cast(Trim(DESTINATION) As String),
  Cast(Trim(TYPE_EVENT) As String),
  Cast(Trim(SENS_EVENT) As String),
  Cast(Trim(OPERATEUR_APPELE) As String),
  Cast(Trim(OPERATEUR_APPELANT) As String),
  Cast(Trim(TYPE_CELLULE) As String),
  CAST(cast(REGEXP_REPLACE(CI, ',', '.') as float) AS BIGINT),
  CAST(cast(REGEXP_REPLACE(DUREE_EVENT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(MONTANT_VALORISE, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(MONTANT_BUNDLE, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(MONTANT_BONUS, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(VOL_DATA_CONSOMME, ',', '.') as float) AS BIGINT),
  CAST(cast(REGEXP_REPLACE(VOL_DATA_DOWN, ',', '.') as float) AS BIGINT),
  CAST(cast(REGEXP_REPLACE(VOL_DATA_UP, ',', '.') as float) AS BIGINT),
  DATE_ID
FROM OIC.TT_CDR_ENTRANT where upper(msisdn) not like upper('%msisdn%')
and SUBSTR(MSISDN, LENGTH(MSISDN), (LENGTH(MSISDN) -1 )) = '0';


-- 6- INFO_TERMINAUX

INSERT OVERWRITE TABLE OIC.TF_INFO_TERMINAUX_10PCT PARTITION (PRT_DATE)
SELECT
  FROM_UNIXTIME(UNIX_TIMESTAMP(DATE_ID, 'yyyyMMdd')),
  CAST(Trim(MSISDN) AS BIGINT),
  substr(CAST(trim(CODE_TAC) AS String),0,8),
  CAST(Trim(MODELE) As String),
  CAST(Trim(MARQUE) As String),
  CAST(Trim(DEVICE_TYPE) As String),
  DATE_ID
FROM OIC.TT_INFO_TERMINAUX where upper(msisdn) not like upper('%msisdn%')
and SUBSTR(MSISDN, LENGTH(MSISDN), (LENGTH(MSISDN) -1 )) = '0';


-- 7- MSIM

INSERT OVERWRITE TABLE OIC.TF_MSIM_10PCT
SELECT
  CAST(MSISDN AS BIGINT),
  CAST(cast(REGEXP_REPLACE(STATUT_ORANGE, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(STATUT_MTN, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(STATUT_MOOV, ',', '.') as float) AS int)
FROM OIC.TT_MSIM where upper(msisdn) not like upper('%msisdn%')
and SUBSTR(MSISDN, LENGTH(MSISDN), (LENGTH(MSISDN) -1 )) = '0';

-- 8- RECHARGE

INSERT OVERWRITE TABLE OIC.TF_RECHARGE_10PCT PARTITION (PRT_DATE)
SELECT
  FROM_UNIXTIME(UNIX_TIMESTAMP(DATE_RECHARGEMENT, 'yyyyMMdd')),
  CAST(MSISDN AS BIGINT),
  Cast(trim(TYPE_RECHARGEMENT) As String),
  CAST(cast(REGEXP_REPLACE(MONTANT_RECHARGEMNT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NOMBRE_RECHARGEMNT, ',', '.') as float) AS int),
  DATE_RECHARGEMENT
FROM OIC.TT_RECHARGE where upper(msisdn) not like upper('%msisdn%')
and SUBSTR(MSISDN, LENGTH(MSISDN), (LENGTH(MSISDN) -1 )) = '0';


-- 9- REFERENTIEL_TERMINAUX


-- 10- SORTANT

INSERT OVERWRITE TABLE OIC.TF_CDR_SORTANT_10PCT PARTITION (PRT_DATE)
SELECT
  FROM_UNIXTIME(UNIX_TIMESTAMP(DATE_ID, 'yyyyMMdd')),
  CAST(MSISDN AS BIGINT),
  CAST(Trim(MSISDN_APPELANT) AS BIGINT),
  CAST(Trim(MSISDN_APPELE) AS BIGINT),
  Cast(Trim(DESTINATION) As String),
  Cast(Trim(TYPE_EVENT) As String),
  Cast(Trim(SENS_EVENT) As String),
  Cast(Trim(OPERATEUR_APPELANT) As String),
  Cast(Trim(OPERATEUR_APPELE) As String),
  Cast(Trim(TYPE_CELLULE) As String),
  CAST(cast(REGEXP_REPLACE(CI, ',', '.') as float) AS BIGINT),
  CAST(cast(REGEXP_REPLACE(DUREE_EVENT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(MONTANT_VALORISE, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(MONTANT_BUNDLE, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(MONTANT_BONUS, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(VOL_DATA_CONSOMME, ',', '.') as float) AS BIGINT),
  CAST(cast(REGEXP_REPLACE(VOL_DATA_DOWN, ',', '.') as float) AS BIGINT),
  CAST(cast(REGEXP_REPLACE(VOL_DATA_UP, ',', '.') as float) AS BIGINT),
  DATE_ID
FROM OIC.TT_CDR_SORTANT where upper(msisdn) not like upper('%msisdn%')
and SUBSTR(MSISDN, LENGTH(MSISDN), (LENGTH(MSISDN) -1 )) = '0';


-- 11- SVA

INSERT OVERWRITE TABLE OIC.TF_SVA_10PCT PARTITION (PRT_DATE)
SELECT
  FROM_UNIXTIME(UNIX_TIMESTAMP(MONTH_ID, 'yyyyMM')),
  CAST(MSISDN AS BIGINT),
  Cast(trim(TYPE_SOUSCRIPTION) As String),
  CAST(cast(REGEXP_REPLACE(NOMBRE_SOUSCRIPTION, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(MONTANT_SOUSCRIPTION, ',', '.') as float) AS int),
  MONTH_ID
FROM OIC.TT_SVA where upper(MSISDN) not like upper('%MSISDN%')
and SUBSTR(MSISDN, LENGTH(MSISDN), (LENGTH(MSISDN) -1 )) = '0';


-- 12- TRANSACTION_OM

INSERT OVERWRITE TABLE OIC.TF_TRANSACTION_OM_10PCT PARTITION (PRT_DATE)
SELECT
  FROM_UNIXTIME(UNIX_TIMESTAMP(MONTH_ID, 'yyyyMM')),
  CAST(MSISDN AS BIGINT),
  CAST(cast(REGEXP_REPLACE(NBRE_TRANSACTION, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(MONTANT_TRANSACTION, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NBRE_TRANSACTION_IN, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(MONTANT_TRANSACTION_IN, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(NBRE_TRANSACTION_OUT, ',', '.') as float) AS int),
  CAST(cast(REGEXP_REPLACE(MONTANT_TRANSACTION_OUT, ',', '.') as float) AS int),
  MONTH_ID
FROM OIC.TT_TRANSACTION_OM where upper(MSISDN) not like upper('%MSISDN%')
and SUBSTR(MSISDN, LENGTH(MSISDN), (LENGTH(MSISDN) -1 )) = '0';


-----------------------------------------------------------
-----------------------------------------------------------
-- 13- Service Provider per Day
